package oopplus

/**
 * Функции расширения (extension function) позволяют добавить функционал к уже определенным
 * типам. При этом типы могут быть определены где-то в другом месте, например, в стандартной
 * библиотеке.
 * Следует учитывать, что в функциях расширения мы можем обращаться к любым общедоступным
 * свойствам и методам объекта, однако не можем обращаться к свойствам и методам с
 * модификаторами private и protected.
 *
 * Также следует учитывать, что функции расширения не переопределяют функции, которые
 * уже определены в классе. Если функция расширения имеет ту же сигнатуру, что и уже имеющаяся
 * функция класса, то компилятор просто будет игнорировать подобную функцию расширения.
 */
fun main() {
    val aaa = 4
    println(aaa.square())
}

fun Int.square(): Int {
    return this * this//В каждой функции расширения через ключевое слово this мы можем ссылаться на текущий объект того типа, для которого создается функция.
}