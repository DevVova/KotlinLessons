package base

/**
 * В Kotlin все компоненты программы, в том числе переменные, представляют объекты, которые
 * имеют определенный тип данных. Тип данных определяет, какой размер памяти может занимать
 * объект данного типа и какие операции с ним можно производить.
 */

fun main() {

    //Целочисленные типы.

    val a: Byte = 123// хранит целое число от -128 до 127 и занимает 1 байт.
    val aa: UByte = 204U//хранит целое число от 0 до 255 и занимает 1 байт.

    val b: Short = -3455//хранит целое число от -32 768 до 32 767 и занимает 2 байта.
    val bb: UShort = 6767U//хранит целое число от 0 до 65 535 и занимает 2 байта.

    //По умолчанию все числовые литералы расцениваются как значения типа Int.
    val c = 5//хранит целое число от -2 147 483 648 (-231) до 2 147 483 647 (231 - 1) и занимает 4 байта.
    val cc: UInt = 696969696U//хранит целое число от 0 до 232 - 1 и занимает 4 байта.

    //Если число не превышает значения Int, тогда L в конце можно не ставить.
    val d: Long = -2333//хранит целое число от –9 223 372 036 854 775 808 (-263) до 9 223 372 036 854 775 807 (263-1) и занимает 8 байт.
    val dd: ULong = 8UL//хранит целое число от 0 до 264-1 и занимает 8 байт

    //Кроме чисел в десятичной системе мы можем определять числа в двоичной и шестнадцатеричной системах.
    val e = 0b1001//представление в двоичной системе.
    val ee = 0xAb22//представление в шестнадцатеричной системе.
    val eee = 23_000//знаком нижнего подчёркивания можно выделять отдельные разряды.

    println("a = $a\n aa = $aa\n\nb = $b\n bb = $bb\n\nc = $c\ncc = $cc\n\nd = $d\ndd = $dd\n\ne = $e\nee = $ee\neee = $eee")
    println()

    //Числа с плавающей точкой.

    val f: Float = 2.2f//хранит число с плавающей точкой от -3.4*1038 до 3.4*1038 и занимает 4 байта.
    val ff = 3.11//хранит число с плавающей точкой от ±5.0*10-324 до ±1.7*10308 и занимает 8 байта.
    //Также тип Double поддерживает экспоненциальную запись:
    val fff = 2e3//2000.0
    val ffff = 2e-3//0.002
    println("f = $f, ff = $ff\nfff = $fff, ffff = $ffff.")

    //Логический тип Boolean.

    //Тип Boolean может хранить одно из двух значений: true (истина) или false (ложь).
    var h = false
    println(h)
    h = true
    println(h)

    //Символы.

    val g: Char = 'L'
    val gg = '\u2323'//Для кодирования любого другого символа используйте синтаксис escape-последовательности Юникода: '\uFF00'.
    println("g = $g\tgg = $gg.")
    /*
    Также тип Char может представлять специальные последовательности, которые интерпретируются особым образом:
    \t: табуляция
    \n: перевод строки
    \r: возврат каретки
    \': одинарная кавычка
    \": двойная кавычка
    \\: обратный слеш
     */

    //Строки.
    val j = "Letter"
    val jj = """
        Good morning!
        How are you?
    """.trimIndent()
    println(j)
    println(jj)

    //В котлине тип может быть выведен из значения литерала, которым оно инициализируется.
    val name = "Bob"
    println(name)

    val k: Long = 340//Пример неявного преобразования, число 34 имеет тип Int и оно неявно преобразуется в Long.
    val kk: Byte = k.toByte()//А это пример явного преобразования, главное чтобы число 34 входило в диапазон Byte, иначе будет неверное - число 84 в данном примере.
    println("k = $k, kk = $kk.")

    //Тип Any.
    //В Kotlin также есть тип Any, который позволяет присвоить переменной данного типа любое значение.
    var anyThing: Any = 3
    print("anyThing = $anyThing.\t")
    anyThing = "Wow"
    print("anyThing = $anyThing.")
}